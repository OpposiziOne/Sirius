//HELLO WORLD by http://codeforces.com/profile/Programmer
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll INF=1e18;
typedef double d;
typedef long double lld;

ll my_pow (ll a, ll n) {
    int res = 1;
    while (n)
        if (n & 1) { res *= a; --n; }
        else { a *= a; n >>= 1; }
    return res; }
struct dot
{
    int x, y;
};
int VP(dot a, dot b)
{
    return a.x * b.y - a.y * b.x;
}
int CP(dot a, dot b)
{
    return a.x * b.x + a.y * b.y;
}
int mx = 1e5, my = 1e5;
dot point;
dot vectr(dot a, dot b)
{
    dot ans;
    ans.x = b.x - a.x;
    ans.y = b.y - a.y;
    return ans;
}
bool comp(dot a, dot b)
{
    int vp = VP(vectr(point, a), vectr(point, b)), aa = CP(vectr(point, a), vectr(point, a)), ab = CP(vectr(point, a), vectr(point, b));
    if (vp > 0)
        return true;
    if (vp < 0)
        return false;
    if (aa > ab)
        return false;
    else
        return true;
}
lld len(dot a, dot b)
{
    return sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y));
}
int main()
{
    set <pair <int, int> > st;
    int n, x, y;
    cin>>n;
    for (int i = 0; i < n; i++)
    {
        cin>>x>>y;
        st.insert({x, y});
    }
    vector <dot> v;
    for (auto it:st)
    {
        dot g;
        g.x = it.first;
        g.y = it.second;
        if (g.y < my)
        {
            my = g.y;
            mx = g.x;
        }
        else if (g.y == my && g.x < mx)
            mx = g.x;
        v.push_back(g);
    }
    point.x = mx;
    point.y = my;
    sort(v.begin(), v.end(), comp);
    v.push_back(v[0]);
    stack <dot> s;
    s.push(v[0]);
    s.push(v[1]);
    /*for (auto it:v)
        cout<<it.x<<" "<<it.y<<'\n';
    cout<<'\n';*/
    for (int i = 2; i < v.size(); i++)
    {
        while(s.size() >= 2)
        {
            dot b;
            b = s.top();
            s.pop();
            dot a;
            a = s.top();
            s.push(b);
            dot AB = vectr(a, b), BC = vectr(b, v[i]);
            if (VP(AB, BC) <= 0)
                s.pop();
            else
                break;
        }
        s.push(v[i]);
    }
    vector <dot> ans;
    while (!s.empty())
    {
        ans.push_back(s.top());
        s.pop();
    }
    lld S = 0, P = 0;
    for (int i = 1; i < ans.size(); i++)
    {
        P += len(ans[i-1], ans[i]);
        S += VP(ans[i-1], ans[i]);
    }
    cout.precision(10);
    cout<<fixed;
    cout<<P<<'\n'<<abs(S / 2);
return 0;
}
